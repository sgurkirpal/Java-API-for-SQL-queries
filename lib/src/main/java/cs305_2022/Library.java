/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cs305_2022;

import org.xml.sax.SAXException;

import javax.xml.parsers.ParserConfigurationException;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.*;

interface SqlRunner {
    /**
     * Executes a select query that returns a single or no record.
     * @param queryId Unique ID of the query in the queries.xml file.
     * @param queryParam Parameter(s) to be used in the query.
     * @param resultType Type of the object that will be returned after
     *                   populating it with the data returned by the SQL.
     * @return The object populated with the SQL results.
     */
    Object selectOne(String queryId, Object queryParam, Class resultType) ;

    /**
     * Same as {@link #selectOne(String, Object, Class)} except that this one
     * returns multiple rows.
     * @param queryId
     * @param queryParam
     * @param resultItemType
     * @return
     */
    List<?> selectMany(String queryId, Object queryParam, Class resultItemType);

    /**
     * Execute an update statement and return the number of rows affected.
     * @param queryId
     * @param queryParam
     * @return
     */
    int update(String queryId, Object queryParam);

    /**
     * Execute an insert statement and return the number of rows affected.
     * @param queryId
     * @param queryParam
     * @return
     */
    int insert(String queryId, Object queryParam);

    /**
     * Execute a delete statement and return the number of rows affected.
     * @param queryId
     * @param queryParam
     * @return
     */
    int delete(String queryId, Object queryParam);
}


public class Library implements SqlRunner {
    MainFile main;

    public Library() throws ParserConfigurationException, IOException, SAXException {
        this.main=new MainFile();
    }
    @Override
    public Object selectOne(String queryId, Object queryParam, Class resultType)  {
        return main.select_in_sql(queryId,queryParam,resultType);
    }

    @Override
    public List<?> selectMany(String queryId, Object queryParam, Class resultItemType) {
        return main.many_in_sql(queryId,queryParam,resultItemType);
    }

    @Override
    public int update(String queryId, Object queryParam){
        return main.insert_in_sql(queryId,queryParam);
    }

    @Override
    public int insert(String queryId, Object queryParam){
        return main.insert_in_sql(queryId,queryParam);
    }

    @Override
    public int delete(String queryId, Object queryParam){
        return main.delete_in_sql(queryId,queryParam);
    }

}
